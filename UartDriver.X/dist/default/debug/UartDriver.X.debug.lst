

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Oct 29 12:31:44 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataCOMRAM
    30  000C36                     __pidataCOMRAM:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _messageCharacter
    34  000C36  07                 	db	low STR_3
    35  000C37  08                 	db	high STR_3
    36                           
    37                           ;initializer for _startCharacter
    38  000C38  0D                 	db	low STR_1
    39  000C39  08                 	db	high STR_1
    40                           
    41                           ;initializer for _stopCharacter
    42  000C3A  0B                 	db	low STR_2
    43  000C3B  08                 	db	high STR_2
    44                           
    45                           	psect	nvCOMRAM
    46  00003C                     __pnvCOMRAM:
    47                           	opt stack 0
    48  00003C                     _deviceName:
    49                           	opt stack 0
    50  00003C                     	ds	3
    51  0000                     _PORTA	set	3968
    52  0000                     _PORTAbits	set	3968
    53  0000                     _PORTB	set	3969
    54  0000                     _PORTC	set	3970
    55  0000                     _TRISA	set	3986
    56  0000                     _TRISB	set	3987
    57  0000                     _TRISC	set	3988
    58  0000                     _TRISCbits	set	3988
    59  0000                     _ADCON1	set	4033
    60  0000                     _BAUDCONbits	set	4024
    61  0000                     _IPR1bits	set	3999
    62  0000                     _PIE1bits	set	3997
    63  0000                     _PIR1bits	set	3998
    64  0000                     _RCONbits	set	4048
    65  0000                     _RCREG	set	4014
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _SPBRG	set	4015
    68  0000                     _TXREG	set	4013
    69  0000                     _TXSTAbits	set	4012
    70  0000                     _INTCONbits	set	4082
    71                           
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	opt stack 0
    75  000800  00                 	db	0
    76  000801                     STR_6:
    77  000801  50                 	db	80	;'P'
    78  000802  61                 	db	97	;'a'
    79  000803  6E                 	db	110	;'n'
    80  000804  64                 	db	100	;'d'
    81  000805  61                 	db	97	;'a'
    82  000806  00                 	db	0
    83  000807                     STR_3:
    84  000807  5B                 	db	91	;'['
    85  000808  4D                 	db	77	;'M'
    86  000809  5D                 	db	93	;']'
    87  00080A  00                 	db	0
    88  00080B                     STR_2:
    89  00080B  24                 	db	36
    90  00080C  00                 	db	0
    91  00080D                     STR_1:
    92  00080D  26                 	db	38
    93  00080E  00                 	db	0
    94  00080F                     STR_4:
    95  00080F  3A                 	db	58	;':'
    96  000810  00                 	db	0
    97  0000                     
    98                           ; #config settings
    99  000811  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  000B78                     __pcinit:
   103                           	opt stack 0
   104  000B78                     start_initialization:
   105                           	opt stack 0
   106  000B78                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (9 bytes)
   110  000B78  EE00  F02D         	lfsr	0,__pbssCOMRAM
   111  000B7C  0E09               	movlw	9
   112  000B7E                     clear_0:
   113  000B7E  6AEE               	clrf	postinc0,c
   114  000B80  06E8               	decf	wreg,f,c
   115  000B82  E1FD               	bnz	clear_0
   116                           
   117                           ; Initialize objects allocated to COMRAM (6 bytes)
   118                           ; load TBLPTR registers with __pidataCOMRAM
   119  000B84  0E36               	movlw	low __pidataCOMRAM
   120  000B86  6EF6               	movwf	tblptrl,c
   121  000B88  0E0C               	movlw	high __pidataCOMRAM
   122  000B8A  6EF7               	movwf	tblptrh,c
   123  000B8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   124  000B8E  6EF8               	movwf	tblptru,c
   125  000B90  EE00  F036         	lfsr	0,__pdataCOMRAM
   126  000B94  EE10 F006          	lfsr	1,6
   127  000B98                     copy_data0:
   128  000B98  0009               	tblrd		*+
   129  000B9A  CFF5 FFEE          	movff	tablat,postinc0
   130  000B9E  50E5               	movf	postdec1,w,c
   131  000BA0  50E1               	movf	fsr1l,w,c
   132  000BA2  E1FA               	bnz	copy_data0
   133  000BA4                     end_of_initialization:
   134                           	opt stack 0
   135  000BA4                     __end_of__initialization:
   136                           	opt stack 0
   137  000BA4  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138  000BA6  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139  000BA8  0100               	movlb	0
   140  000BAA  EFD7  F005         	goto	_main	;jump to C main() function
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	bssCOMRAM
   151  00002D                     __pbssCOMRAM:
   152                           	opt stack 0
   153  00002D                     _readBuffer:
   154                           	opt stack 0
   155  00002D                     	ds	7
   156  000034                     _baud:
   157                           	opt stack 0
   158  000034                     	ds	1
   159  000035                     _readReady:
   160                           	opt stack 0
   161  000035                     	ds	1
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           postdec1	equ	0xFE5
   169                           fsr1l	equ	0xFE1
   170                           
   171                           	psect	dataCOMRAM
   172  000036                     __pdataCOMRAM:
   173                           	opt stack 0
   174  000036                     _messageCharacter:
   175                           	opt stack 0
   176  000036                     	ds	2
   177  000038                     _startCharacter:
   178                           	opt stack 0
   179  000038                     	ds	2
   180  00003A                     _stopCharacter:
   181                           	opt stack 0
   182  00003A                     	ds	2
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	cstackBANK0
   193  000060                     __pcstackBANK0:
   194                           	opt stack 0
   195  000060                     ___aldiv@counter:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x0
   199  000060                     	ds	1
   200  000061                     ___aldiv@sign:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x1
   204  000061                     	ds	1
   205  000062                     ___aldiv@quotient:
   206                           	opt stack 0
   207                           
   208                           ; 4 bytes @ 0x2
   209  000062                     	ds	4
   210  000066                     D_UART_Init@name:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x6
   214  000066                     	ds	2
   215  000068                     D_UART_Init@baud:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x8
   219  000068                     	ds	2
   220  00006A                     D_UART_Init@interrupts:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0xA
   224  00006A                     	ds	1
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           postdec1	equ	0xFE5
   232                           fsr1l	equ	0xFE1
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	opt stack 0
   237  000001                     writeByte@data:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     putch@data:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x1
   246  000002                     	ds	1
   247  000003                     ?_printf:
   248                           	opt stack 0
   249  000003                     printf@f:
   250                           	opt stack 0
   251                           
   252                           ; 3 bytes @ 0x2
   253  000003                     	ds	3
   254  000006                     printf@ap:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x5
   258  000006                     	ds	2
   259  000008                     printf@flag:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x7
   263  000008                     	ds	1
   264  000009                     printf@c:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x8
   268  000009                     	ds	1
   269  00000A                     D_UART_Write@command:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x9
   273  00000A                     	ds	2
   274  00000C                     D_UART_Write@data:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0xB
   278  00000C                     	ds	2
   279  00000E                     ??_D_UART_Write:
   280                           
   281                           ; 1 bytes @ 0xD
   282  00000E                     	ds	1
   283  00000F                     fillDataBuffer@data:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0xE
   287  00000F                     	ds	1
   288  000010                     ??_LowISR:
   289                           
   290                           ; 1 bytes @ 0xF
   291  000010                     	ds	17
   292  000021                     ?___aldiv:
   293                           	opt stack 0
   294  000021                     D_UART_Enable@enable:
   295                           	opt stack 0
   296  000021                     ___aldiv@dividend:
   297                           	opt stack 0
   298                           
   299                           ; 4 bytes @ 0x20
   300  000021                     	ds	4
   301  000025                     ___aldiv@divisor:
   302                           	opt stack 0
   303                           
   304                           ; 4 bytes @ 0x24
   305  000025                     	ds	4
   306  000029                     _D_UART_Init$1244:
   307                           	opt stack 0
   308                           
   309                           ; 4 bytes @ 0x28
   310  000029                     	ds	4
   311  00002D                     tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           ; 1 bytes @ 0x2C
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 17 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   340 ;;      Params:         0       0       0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called:    8
   346 ;; This function calls:
   347 ;;		_D_PORT_Init
   348 ;;		_D_UART_Enable
   349 ;;		_D_UART_Init
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text0
   356  000BAE                     __ptext0:
   357                           	opt stack 0
   358  000BAE                     _main:
   359                           	opt stack 23
   360                           
   361                           ;main.c: 19: D_PORT_Init();
   362                           
   363                           ;incstack = 0
   364  000BAE  ECFD  F005         	call	_D_PORT_Init	;wreg free
   365                           
   366                           ;main.c: 22: D_UART_Init("Panda", 9600, 1);
   367  000BB2  0E01               	movlw	low STR_6
   368  000BB4  0100               	movlb	0	; () banked
   369  000BB6  6F66               	movwf	D_UART_Init@name& (0+255),b
   370  000BB8  0E08               	movlw	high STR_6
   371  000BBA  0100               	movlb	0	; () banked
   372  000BBC  6F67               	movwf	(D_UART_Init@name+1)& (0+255),b
   373  000BBE  0E25               	movlw	37
   374  000BC0  0100               	movlb	0	; () banked
   375  000BC2  6F69               	movwf	(D_UART_Init@baud+1)& (0+255),b
   376  000BC4  0E80               	movlw	128
   377  000BC6  6F68               	movwf	D_UART_Init@baud& (0+255),b
   378  000BC8  0E01               	movlw	1
   379  000BCA  0100               	movlb	0	; () banked
   380  000BCC  6F6A               	movwf	D_UART_Init@interrupts& (0+255),b
   381  000BCE  EC26  F005         	call	_D_UART_Init	;wreg free
   382                           
   383                           ;main.c: 23: D_UART_Enable(1);
   384  000BD2  0E01               	movlw	1
   385  000BD4  ECED  F005         	call	_D_UART_Enable
   386  000BD8                     l124:
   387  000BD8  D7FF               	goto	l124
   388  000BDA                     __end_of_main:
   389                           	opt stack 0
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399 ;; *************** function _D_UART_Init *****************
   400 ;; Defined at:
   401 ;;		line 108 in file "Drivers/UART_Driver.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  name            2    6[BANK0 ] PTR const unsigned char 
   404 ;;		 -> STR_6(6), 
   405 ;;  baud            2    8[BANK0 ] unsigned int 
   406 ;;  interrupts      1   10[BANK0 ] unsigned char 
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   418 ;;      Params:         0       5       0       0       0       0       0       0       0
   419 ;;      Locals:         4       0       0       0       0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0       0       0
   421 ;;      Totals:         4       5       0       0       0       0       0       0       0
   422 ;;Total ram usage:        9 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    7
   425 ;; This function calls:
   426 ;;		_D_UART_Enable
   427 ;;		___aldiv
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434  000A4C                     __ptext1:
   435                           	opt stack 0
   436  000A4C                     _D_UART_Init:
   437                           	opt stack 23
   438                           
   439                           ;UART_Driver.c: 110: TRISCbits.TRISC7 = 0;
   440                           
   441                           ;incstack = 0
   442  000A4C  9E94               	bcf	3988,7,c	;volatile
   443                           
   444                           ;UART_Driver.c: 111: TRISCbits.TRISC6 = 1;
   445  000A4E  8C94               	bsf	3988,6,c	;volatile
   446                           
   447                           ;UART_Driver.c: 114: deviceName = name;
   448  000A50  C066  F03C         	movff	D_UART_Init@name,_deviceName
   449  000A54  C067  F03D         	movff	D_UART_Init@name+1,_deviceName+1
   450  000A58  503C               	movf	_deviceName,w,c
   451  000A5A  103D               	iorwf	_deviceName+1,w,c
   452  000A5C  A4D8               	btfss	status,2,c
   453  000A5E  0E00               	movlw	low (__mediumconst shr (0+16))
   454  000A60  6E3E               	movwf	_deviceName+2,c
   455                           
   456                           ;UART_Driver.c: 117: D_UART_Enable(0);
   457  000A62  0E00               	movlw	0
   458  000A64  ECED  F005         	call	_D_UART_Enable
   459                           
   460                           ;UART_Driver.c: 120: TXSTAbits.TX9 = 0;
   461  000A68  9CAC               	bcf	4012,6,c	;volatile
   462                           
   463                           ;UART_Driver.c: 121: TXSTAbits.SYNC = 0;
   464  000A6A  98AC               	bcf	4012,4,c	;volatile
   465                           
   466                           ;UART_Driver.c: 122: TXSTAbits.BRGH = 0;
   467  000A6C  94AC               	bcf	4012,2,c	;volatile
   468                           
   469                           ;UART_Driver.c: 125: RCSTAbits.RX9 = 0;
   470  000A6E  9CAB               	bcf	4011,6,c	;volatile
   471                           
   472                           ;UART_Driver.c: 128: BAUDCONbits.RXDTP = 1;
   473  000A70  8AB8               	bsf	4024,5,c	;volatile
   474                           
   475                           ;UART_Driver.c: 129: BAUDCONbits.TXCKP = 1;
   476  000A72  88B8               	bsf	4024,4,c	;volatile
   477                           
   478                           ;UART_Driver.c: 130: BAUDCONbits.BRG16 = 0;
   479  000A74  96B8               	bcf	4024,3,c	;volatile
   480                           
   481                           ;UART_Driver.c: 135: SPBRG = ((10000000/baud)/64)-1;
   482  000A76  C068  F025         	movff	D_UART_Init@baud,___aldiv@divisor
   483  000A7A  C069  F026         	movff	D_UART_Init@baud+1,___aldiv@divisor+1
   484  000A7E  6A27               	clrf	___aldiv@divisor+2,c
   485  000A80  6A28               	clrf	___aldiv@divisor+3,c
   486  000A82  0E80               	movlw	128
   487  000A84  6E21               	movwf	___aldiv@dividend,c
   488  000A86  0E96               	movlw	150
   489  000A88  6E22               	movwf	___aldiv@dividend+1,c
   490  000A8A  0E98               	movlw	152
   491  000A8C  6E23               	movwf	___aldiv@dividend+2,c
   492  000A8E  0E00               	movlw	0
   493  000A90  6E24               	movwf	___aldiv@dividend+3,c
   494  000A92  EC09  F004         	call	___aldiv	;wreg free
   495  000A96  C021  F029         	movff	?___aldiv,_D_UART_Init$1244
   496  000A9A  C022  F02A         	movff	?___aldiv+1,_D_UART_Init$1244+1
   497  000A9E  C023  F02B         	movff	?___aldiv+2,_D_UART_Init$1244+2
   498  000AA2  C024  F02C         	movff	?___aldiv+3,_D_UART_Init$1244+3
   499                           
   500                           ;UART_Driver.c: 135: SPBRG = ((10000000/baud)/64)-1;
   501  000AA6  C029  F021         	movff	_D_UART_Init$1244,___aldiv@dividend
   502  000AAA  C02A  F022         	movff	_D_UART_Init$1244+1,___aldiv@dividend+1
   503  000AAE  C02B  F023         	movff	_D_UART_Init$1244+2,___aldiv@dividend+2
   504  000AB2  C02C  F024         	movff	_D_UART_Init$1244+3,___aldiv@dividend+3
   505  000AB6  0E40               	movlw	64
   506  000AB8  6E25               	movwf	___aldiv@divisor,c
   507  000ABA  0E00               	movlw	0
   508  000ABC  6E26               	movwf	___aldiv@divisor+1,c
   509  000ABE  0E00               	movlw	0
   510  000AC0  6E27               	movwf	___aldiv@divisor+2,c
   511  000AC2  0E00               	movlw	0
   512  000AC4  6E28               	movwf	___aldiv@divisor+3,c
   513  000AC6  EC09  F004         	call	___aldiv	;wreg free
   514  000ACA  0421               	decf	?___aldiv,w,c
   515  000ACC  6EAF               	movwf	4015,c	;volatile
   516                           
   517                           ;UART_Driver.c: 138: if (interrupts) {
   518  000ACE  0100               	movlb	0	; () banked
   519  000AD0  516A               	movf	D_UART_Init@interrupts& (0+255),w,b
   520  000AD2  0100               	movlb	0	; () banked
   521  000AD4  B4D8               	btfsc	status,2,c
   522  000AD6  0012               	return	
   523                           
   524                           ; BSR set to: 0
   525                           ;UART_Driver.c: 139: RCONbits.IPEN = 1;
   526  000AD8  8ED0               	bsf	4048,7,c	;volatile
   527                           
   528                           ;UART_Driver.c: 140: INTCONbits.GIEH = 1;
   529  000ADA  8EF2               	bsf	intcon,7,c	;volatile
   530                           
   531                           ;UART_Driver.c: 141: INTCONbits.GIEL = 1;
   532  000ADC  8CF2               	bsf	intcon,6,c	;volatile
   533                           
   534                           ;UART_Driver.c: 142: PIR1bits.RCIF = 0;
   535  000ADE  9A9E               	bcf	3998,5,c	;volatile
   536                           
   537                           ;UART_Driver.c: 143: IPR1bits.RCIP = 0;
   538  000AE0  9A9F               	bcf	3999,5,c	;volatile
   539                           
   540                           ;UART_Driver.c: 144: PIE1bits.RCIE = 1;
   541  000AE2  8A9D               	bsf	3997,5,c	;volatile
   542  000AE4  0012               	return	
   543  000AE6                     __end_of_D_UART_Init:
   544                           	opt stack 0
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           intcon	equ	0xFF2
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           status	equ	0xFD8
   555                           
   556 ;; *************** function ___aldiv *****************
   557 ;; Defined at:
   558 ;;		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/aldiv.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  dividend        4   32[COMRAM] long 
   561 ;;  divisor         4   36[COMRAM] long 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  quotient        4    2[BANK0 ] long 
   564 ;;  sign            1    1[BANK0 ] unsigned char 
   565 ;;  counter         1    0[BANK0 ] unsigned char 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  4   32[COMRAM] long 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   575 ;;      Params:         8       0       0       0       0       0       0       0       0
   576 ;;      Locals:         0       6       0       0       0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0
   578 ;;      Totals:         8       6       0       0       0       0       0       0       0
   579 ;;Total ram usage:       14 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    6
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_D_UART_Init
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text2
   590  000812                     __ptext2:
   591                           	opt stack 0
   592  000812                     ___aldiv:
   593                           	opt stack 23
   594                           
   595                           ; BSR set to: 0
   596                           ;incstack = 0
   597  000812  0E00               	movlw	0
   598  000814  0100               	movlb	0	; () banked
   599  000816  6F61               	movwf	___aldiv@sign& (0+255),b
   600                           
   601                           ; BSR set to: 0
   602  000818  AE28               	btfss	___aldiv@divisor+3,7,c
   603  00081A  D00B               	goto	l1081
   604                           
   605                           ; BSR set to: 0
   606  00081C  1E28               	comf	___aldiv@divisor+3,f,c
   607  00081E  1E27               	comf	___aldiv@divisor+2,f,c
   608  000820  1E26               	comf	___aldiv@divisor+1,f,c
   609  000822  6C25               	negf	___aldiv@divisor,c
   610  000824  0E00               	movlw	0
   611  000826  2226               	addwfc	___aldiv@divisor+1,f,c
   612  000828  2227               	addwfc	___aldiv@divisor+2,f,c
   613  00082A  2228               	addwfc	___aldiv@divisor+3,f,c
   614                           
   615                           ; BSR set to: 0
   616  00082C  0E01               	movlw	1
   617  00082E  0100               	movlb	0	; () banked
   618  000830  6F61               	movwf	___aldiv@sign& (0+255),b
   619  000832                     l1081:
   620                           
   621                           ; BSR set to: 0
   622  000832  AE24               	btfss	___aldiv@dividend+3,7,c
   623  000834  D00B               	goto	l1087
   624                           
   625                           ; BSR set to: 0
   626  000836  1E24               	comf	___aldiv@dividend+3,f,c
   627  000838  1E23               	comf	___aldiv@dividend+2,f,c
   628  00083A  1E22               	comf	___aldiv@dividend+1,f,c
   629  00083C  6C21               	negf	___aldiv@dividend,c
   630  00083E  0E00               	movlw	0
   631  000840  2222               	addwfc	___aldiv@dividend+1,f,c
   632  000842  2223               	addwfc	___aldiv@dividend+2,f,c
   633  000844  2224               	addwfc	___aldiv@dividend+3,f,c
   634                           
   635                           ; BSR set to: 0
   636  000846  0E01               	movlw	1
   637  000848  0100               	movlb	0	; () banked
   638  00084A  1B61               	xorwf	___aldiv@sign& (0+255),f,b
   639  00084C                     l1087:
   640                           
   641                           ; BSR set to: 0
   642  00084C  0E00               	movlw	0
   643  00084E  0100               	movlb	0	; () banked
   644  000850  6F62               	movwf	___aldiv@quotient& (0+255),b
   645  000852  0E00               	movlw	0
   646  000854  6F63               	movwf	(___aldiv@quotient+1)& (0+255),b
   647  000856  0E00               	movlw	0
   648  000858  6F64               	movwf	(___aldiv@quotient+2)& (0+255),b
   649  00085A  0E00               	movlw	0
   650  00085C  6F65               	movwf	(___aldiv@quotient+3)& (0+255),b
   651                           
   652                           ; BSR set to: 0
   653  00085E  5025               	movf	___aldiv@divisor,w,c
   654  000860  1026               	iorwf	___aldiv@divisor+1,w,c
   655  000862  1027               	iorwf	___aldiv@divisor+2,w,c
   656  000864  1028               	iorwf	___aldiv@divisor+3,w,c
   657  000866  B4D8               	btfsc	status,2,c
   658  000868  D02F               	goto	l1109
   659                           
   660                           ; BSR set to: 0
   661  00086A  0E01               	movlw	1
   662  00086C  0100               	movlb	0	; () banked
   663  00086E  6F60               	movwf	___aldiv@counter& (0+255),b
   664  000870  D007               	goto	l1095
   665  000872                     l1093:
   666                           
   667                           ; BSR set to: 0
   668  000872  90D8               	bcf	status,0,c
   669  000874  3625               	rlcf	___aldiv@divisor,f,c
   670  000876  3626               	rlcf	___aldiv@divisor+1,f,c
   671  000878  3627               	rlcf	___aldiv@divisor+2,f,c
   672  00087A  3628               	rlcf	___aldiv@divisor+3,f,c
   673  00087C  0100               	movlb	0	; () banked
   674  00087E  2B60               	incf	___aldiv@counter& (0+255),f,b
   675  000880                     l1095:
   676                           
   677                           ; BSR set to: 0
   678  000880  AE28               	btfss	___aldiv@divisor+3,7,c
   679  000882  D7F7               	goto	l1093
   680  000884                     l1097:
   681                           
   682                           ; BSR set to: 0
   683  000884  0100               	movlb	0	; () banked
   684  000886  90D8               	bcf	status,0,c
   685  000888  3762               	rlcf	___aldiv@quotient& (0+255),f,b
   686  00088A  3763               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
   687  00088C  3764               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
   688  00088E  3765               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
   689                           
   690                           ; BSR set to: 0
   691  000890  5025               	movf	___aldiv@divisor,w,c
   692  000892  5C21               	subwf	___aldiv@dividend,w,c
   693  000894  5026               	movf	___aldiv@divisor+1,w,c
   694  000896  5822               	subwfb	___aldiv@dividend+1,w,c
   695  000898  5027               	movf	___aldiv@divisor+2,w,c
   696  00089A  5823               	subwfb	___aldiv@dividend+2,w,c
   697  00089C  5028               	movf	___aldiv@divisor+3,w,c
   698  00089E  5824               	subwfb	___aldiv@dividend+3,w,c
   699  0008A0  A0D8               	btfss	status,0,c
   700  0008A2  D00A               	goto	l1105
   701                           
   702                           ; BSR set to: 0
   703  0008A4  5025               	movf	___aldiv@divisor,w,c
   704  0008A6  5E21               	subwf	___aldiv@dividend,f,c
   705  0008A8  5026               	movf	___aldiv@divisor+1,w,c
   706  0008AA  5A22               	subwfb	___aldiv@dividend+1,f,c
   707  0008AC  5027               	movf	___aldiv@divisor+2,w,c
   708  0008AE  5A23               	subwfb	___aldiv@dividend+2,f,c
   709  0008B0  5028               	movf	___aldiv@divisor+3,w,c
   710  0008B2  5A24               	subwfb	___aldiv@dividend+3,f,c
   711                           
   712                           ; BSR set to: 0
   713  0008B4  0100               	movlb	0	; () banked
   714  0008B6  8162               	bsf	___aldiv@quotient& (0+255),0,b
   715  0008B8                     l1105:
   716                           
   717                           ; BSR set to: 0
   718  0008B8  90D8               	bcf	status,0,c
   719  0008BA  3228               	rrcf	___aldiv@divisor+3,f,c
   720  0008BC  3227               	rrcf	___aldiv@divisor+2,f,c
   721  0008BE  3226               	rrcf	___aldiv@divisor+1,f,c
   722  0008C0  3225               	rrcf	___aldiv@divisor,f,c
   723                           
   724                           ; BSR set to: 0
   725  0008C2  0100               	movlb	0	; () banked
   726  0008C4  2F60               	decfsz	___aldiv@counter& (0+255),f,b
   727  0008C6  D7DE               	goto	l1097
   728  0008C8                     l1109:
   729                           
   730                           ; BSR set to: 0
   731  0008C8  0100               	movlb	0	; () banked
   732  0008CA  5161               	movf	___aldiv@sign& (0+255),w,b
   733  0008CC  0100               	movlb	0	; () banked
   734  0008CE  B4D8               	btfsc	status,2,c
   735  0008D0  D009               	goto	l1113
   736                           
   737                           ; BSR set to: 0
   738  0008D2  0100               	movlb	0	; () banked
   739  0008D4  1F65               	comf	(___aldiv@quotient+3)& (0+255),f,b
   740  0008D6  1F64               	comf	(___aldiv@quotient+2)& (0+255),f,b
   741  0008D8  1F63               	comf	(___aldiv@quotient+1)& (0+255),f,b
   742  0008DA  6D62               	negf	___aldiv@quotient& (0+255),b
   743  0008DC  0E00               	movlw	0
   744  0008DE  2363               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
   745  0008E0  2364               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
   746  0008E2  2365               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
   747  0008E4                     l1113:
   748                           
   749                           ; BSR set to: 0
   750  0008E4  C062  F021         	movff	___aldiv@quotient,?___aldiv
   751  0008E8  C063  F022         	movff	___aldiv@quotient+1,?___aldiv+1
   752  0008EC  C064  F023         	movff	___aldiv@quotient+2,?___aldiv+2
   753  0008F0  C065  F024         	movff	___aldiv@quotient+3,?___aldiv+3
   754  0008F4  0012               	return	
   755  0008F6                     __end_of___aldiv:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           intcon	equ	0xFF2
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1l	equ	0xFE1
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _D_UART_Enable *****************
   769 ;; Defined at:
   770 ;;		line 166 in file "Drivers/UART_Driver.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  enable          1    wreg     unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  enable          1   32[COMRAM] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   784 ;;      Params:         0       0       0       0       0       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0
   787 ;;      Totals:         1       0       0       0       0       0       0       0       0
   788 ;;Total ram usage:        1 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    6
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_D_UART_Init
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text3
   800  000BDA                     __ptext3:
   801                           	opt stack 0
   802  000BDA                     _D_UART_Enable:
   803                           	opt stack 23
   804                           
   805                           ; BSR set to: 0
   806                           ;incstack = 0
   807                           ;D_UART_Enable@enable stored from wreg
   808  000BDA  6E21               	movwf	D_UART_Enable@enable,c
   809                           
   810                           ;UART_Driver.c: 167: if(enable) {
   811  000BDC  5021               	movf	D_UART_Enable@enable,w,c
   812  000BDE  B4D8               	btfsc	status,2,c
   813  000BE0  D006               	goto	l89
   814                           
   815                           ;UART_Driver.c: 168: TRISCbits.TRISC7 = 0;
   816  000BE2  9E94               	bcf	3988,7,c	;volatile
   817                           
   818                           ;UART_Driver.c: 169: TRISCbits.TRISC6 = 1;
   819  000BE4  8C94               	bsf	3988,6,c	;volatile
   820                           
   821                           ;UART_Driver.c: 170: TXSTAbits.TXEN = 1;
   822  000BE6  8AAC               	bsf	4012,5,c	;volatile
   823                           
   824                           ;UART_Driver.c: 171: RCSTAbits.CREN = 1;
   825  000BE8  88AB               	bsf	4011,4,c	;volatile
   826                           
   827                           ;UART_Driver.c: 172: RCSTAbits.SPEN = 1;
   828  000BEA  8EAB               	bsf	4011,7,c	;volatile
   829                           
   830                           ;UART_Driver.c: 173: } else {
   831  000BEC  0012               	return	
   832  000BEE                     l89:
   833                           
   834                           ;UART_Driver.c: 174: TRISCbits.TRISC7 = 0;
   835  000BEE  9E94               	bcf	3988,7,c	;volatile
   836                           
   837                           ;UART_Driver.c: 175: TRISCbits.TRISC6 = 0;
   838  000BF0  9C94               	bcf	3988,6,c	;volatile
   839                           
   840                           ;UART_Driver.c: 176: TXSTAbits.TXEN = 0;
   841  000BF2  9AAC               	bcf	4012,5,c	;volatile
   842                           
   843                           ;UART_Driver.c: 177: RCSTAbits.CREN = 0;
   844  000BF4  98AB               	bcf	4011,4,c	;volatile
   845                           
   846                           ;UART_Driver.c: 178: RCSTAbits.SPEN = 0;
   847  000BF6  9EAB               	bcf	4011,7,c	;volatile
   848  000BF8  0012               	return	
   849  000BFA                     __end_of_D_UART_Enable:
   850                           	opt stack 0
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           intcon	equ	0xFF2
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           status	equ	0xFD8
   861                           
   862 ;; *************** function _D_PORT_Init *****************
   863 ;; Defined at:
   864 ;;		line 32 in file "Drivers/PORT_Driver.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    6
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text4
   893  000BFA                     __ptext4:
   894                           	opt stack 0
   895  000BFA                     _D_PORT_Init:
   896                           	opt stack 24
   897                           
   898                           ;PORT_Driver.c: 33: TRISA = 0x00; PORTA = 0x00;
   899                           
   900                           ;incstack = 0
   901  000BFA  0E00               	movlw	0
   902  000BFC  6E92               	movwf	3986,c	;volatile
   903  000BFE  0E00               	movlw	0
   904  000C00  6E80               	movwf	3968,c	;volatile
   905                           
   906                           ;PORT_Driver.c: 34: TRISB = 0x00; PORTB = 0x00;
   907  000C02  0E00               	movlw	0
   908  000C04  6E93               	movwf	3987,c	;volatile
   909  000C06  0E00               	movlw	0
   910  000C08  6E81               	movwf	3969,c	;volatile
   911                           
   912                           ;PORT_Driver.c: 35: TRISC = 0x00; PORTC = 0x00;
   913  000C0A  0E00               	movlw	0
   914  000C0C  6E94               	movwf	3988,c	;volatile
   915  000C0E  0E00               	movlw	0
   916  000C10  6E82               	movwf	3970,c	;volatile
   917                           
   918                           ;PORT_Driver.c: 38: ADCON1 = 0x0F;
   919  000C12  0E0F               	movlw	15
   920  000C14  6EC1               	movwf	4033,c	;volatile
   921  000C16  0012               	return		;funcret
   922  000C18                     __end_of_D_PORT_Init:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _LowISR *****************
   936 ;; Defined at:
   937 ;;		line 186 in file "Drivers/UART_Driver.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         0       0       0       0       0       0       0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0
   953 ;;      Temps:         17       0       0       0       0       0       0       0       0
   954 ;;      Totals:        17       0       0       0       0       0       0       0       0
   955 ;;Total ram usage:       17 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    5
   958 ;; This function calls:
   959 ;;		_fillDataBuffer
   960 ;;		_readByte
   961 ;; This function is called by:
   962 ;;		Interrupt level 1
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	intcodelo
   967  000018                     __pintcodelo:
   968                           	opt stack 0
   969  000018                     _LowISR:
   970                           	opt stack 23
   971                           
   972                           ;incstack = 0
   973  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   974  00001A  CFD8 F010          	movff	status,??_LowISR
   975  00001E  CFE8 F011          	movff	wreg,??_LowISR+1
   976  000022  CFE0 F012          	movff	bsr,??_LowISR+2
   977  000026  CFFA F013          	movff	pclath,??_LowISR+3
   978  00002A  CFFB F014          	movff	pclatu,??_LowISR+4
   979  00002E  CFE9 F015          	movff	fsr0l,??_LowISR+5
   980  000032  CFEA F016          	movff	fsr0h,??_LowISR+6
   981  000036  CFE1 F017          	movff	fsr1l,??_LowISR+7
   982  00003A  CFE2 F018          	movff	fsr1h,??_LowISR+8
   983  00003E  CFD9 F019          	movff	fsr2l,??_LowISR+9
   984  000042  CFDA F01A          	movff	fsr2h,??_LowISR+10
   985  000046  CFF3 F01B          	movff	prodl,??_LowISR+11
   986  00004A  CFF4 F01C          	movff	prodh,??_LowISR+12
   987  00004E  CFF6 F01D          	movff	tblptrl,??_LowISR+13
   988  000052  CFF7 F01E          	movff	tblptrh,??_LowISR+14
   989  000056  CFF8 F01F          	movff	tblptru,??_LowISR+15
   990  00005A  CFF5 F020          	movff	tablat,??_LowISR+16
   991                           
   992                           ;UART_Driver.c: 187: PORTAbits.RA0 = 1;
   993  00005E  8080               	bsf	3968,0,c	;volatile
   994                           
   995                           ;UART_Driver.c: 188: if (PIR1bits.RC1IF) {
   996  000060  AA9E               	btfss	3998,5,c	;volatile
   997  000062  D005               	goto	i1l1065
   998                           
   999                           ;UART_Driver.c: 189: fillDataBuffer(readByte());
  1000  000064  EC17  F006         	call	_readByte	;wreg free
  1001  000068  ECD8  F004         	call	_fillDataBuffer
  1002                           
  1003                           ;UART_Driver.c: 190: PIR1bits.RC1IF = 0;
  1004  00006C  9A9E               	bcf	3998,5,c	;volatile
  1005  00006E                     i1l1065:
  1006                           
  1007                           ;UART_Driver.c: 191: }
  1008                           ;UART_Driver.c: 192: PORTAbits.RA0 = 0;
  1009  00006E  9080               	bcf	3968,0,c	;volatile
  1010  000070  C020  FFF5         	movff	??_LowISR+16,tablat
  1011  000074  C01F  FFF8         	movff	??_LowISR+15,tblptru
  1012  000078  C01E  FFF7         	movff	??_LowISR+14,tblptrh
  1013  00007C  C01D  FFF6         	movff	??_LowISR+13,tblptrl
  1014  000080  C01C  FFF4         	movff	??_LowISR+12,prodh
  1015  000084  C01B  FFF3         	movff	??_LowISR+11,prodl
  1016  000088  C01A  FFDA         	movff	??_LowISR+10,fsr2h
  1017  00008C  C019  FFD9         	movff	??_LowISR+9,fsr2l
  1018  000090  C018  FFE2         	movff	??_LowISR+8,fsr1h
  1019  000094  C017  FFE1         	movff	??_LowISR+7,fsr1l
  1020  000098  C016  FFEA         	movff	??_LowISR+6,fsr0h
  1021  00009C  C015  FFE9         	movff	??_LowISR+5,fsr0l
  1022  0000A0  C014  FFFB         	movff	??_LowISR+4,pclatu
  1023  0000A4  C013  FFFA         	movff	??_LowISR+3,pclath
  1024  0000A8  C012  FFE0         	movff	??_LowISR+2,bsr
  1025  0000AC  C011  FFE8         	movff	??_LowISR+1,wreg
  1026  0000B0  C010  FFD8         	movff	??_LowISR,status
  1027  0000B4  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1028  0000B6  0010               	retfie	
  1029  0000B8                     __end_of_LowISR:
  1030                           	opt stack 0
  1031                           pclatu	equ	0xFFB
  1032                           pclath	equ	0xFFA
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           prodh	equ	0xFF4
  1038                           prodl	equ	0xFF3
  1039                           intcon	equ	0xFF2
  1040                           postinc0	equ	0xFEE
  1041                           fsr0h	equ	0xFEA
  1042                           fsr0l	equ	0xFE9
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           bsr	equ	0xFE0
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _readByte *****************
  1053 ;; Defined at:
  1054 ;;		line 55 in file "Drivers/UART_Driver.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_LowISR
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text6
  1082  000C2E                     __ptext6:
  1083                           	opt stack 0
  1084  000C2E                     _readByte:
  1085                           	opt stack 27
  1086                           
  1087                           ;UART_Driver.c: 56: if(RCSTAbits.FERR == 1) {
  1088                           
  1089                           ;incstack = 0
  1090  000C2E  50AB               	movf	4011,w,c	;volatile
  1091                           
  1092                           ;UART_Driver.c: 58: }
  1093                           ;UART_Driver.c: 59: if(RCSTAbits.OERR == 1) {
  1094  000C30  50AB               	movf	4011,w,c	;volatile
  1095                           
  1096                           ;UART_Driver.c: 61: }
  1097                           ;UART_Driver.c: 62: return RCREG;
  1098  000C32  50AE               	movf	4014,w,c	;volatile
  1099  000C34  0012               	return	
  1100  000C36                     __end_of_readByte:
  1101                           	opt stack 0
  1102                           pclatu	equ	0xFFB
  1103                           pclath	equ	0xFFA
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           intcon	equ	0xFF2
  1111                           postinc0	equ	0xFEE
  1112                           fsr0h	equ	0xFEA
  1113                           fsr0l	equ	0xFE9
  1114                           wreg	equ	0xFE8
  1115                           postdec1	equ	0xFE5
  1116                           fsr1h	equ	0xFE2
  1117                           fsr1l	equ	0xFE1
  1118                           bsr	equ	0xFE0
  1119                           fsr2h	equ	0xFDA
  1120                           fsr2l	equ	0xFD9
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _fillDataBuffer *****************
  1124 ;; Defined at:
  1125 ;;		line 65 in file "Drivers/UART_Driver.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  data            1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  data            1   14[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		_D_UART_Write
  1148 ;; This function is called by:
  1149 ;;		_LowISR
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text7
  1154  0009B0                     __ptext7:
  1155                           	opt stack 0
  1156  0009B0                     _fillDataBuffer:
  1157                           	opt stack 23
  1158                           
  1159                           ;incstack = 0
  1160                           ;fillDataBuffer@data stored from wreg
  1161  0009B0  6E0F               	movwf	fillDataBuffer@data,c
  1162                           
  1163                           ;UART_Driver.c: 66: switch(readBuffer.counter) {
  1164  0009B2  D03E               	goto	i1l1029
  1165  0009B4                     i1l993:
  1166                           
  1167                           ;UART_Driver.c: 68: if(data == 0x26) {
  1168  0009B4  0E26               	movlw	38
  1169  0009B6  180F               	xorwf	fillDataBuffer@data,w,c
  1170  0009B8  A4D8               	btfss	status,2,c
  1171  0009BA  D005               	goto	i1l997
  1172                           
  1173                           ;UART_Driver.c: 69: readReady = 0;
  1174  0009BC  0E00               	movlw	0
  1175  0009BE  6E35               	movwf	_readReady,c
  1176                           
  1177                           ;UART_Driver.c: 70: readBuffer.counter = 1;
  1178  0009C0  0E01               	movlw	1
  1179  0009C2  6E33               	movwf	_readBuffer+6,c
  1180                           
  1181                           ;UART_Driver.c: 71: } else {
  1182  0009C4  0012               	return	
  1183  0009C6                     i1l997:
  1184                           
  1185                           ;UART_Driver.c: 72: readBuffer.counter = 0;
  1186  0009C6  0E00               	movlw	0
  1187  0009C8  6E33               	movwf	_readBuffer+6,c
  1188                           
  1189                           ;UART_Driver.c: 74: }
  1190                           ;UART_Driver.c: 75: break;
  1191                           
  1192                           ;UART_Driver.c: 73: return;
  1193  0009CA  0012               	return	
  1194  0009CC                     i1l1001:
  1195                           
  1196                           ;UART_Driver.c: 77: if (data == 0x3A) {
  1197  0009CC  0E3A               	movlw	58
  1198  0009CE  180F               	xorwf	fillDataBuffer@data,w,c
  1199  0009D0  A4D8               	btfss	status,2,c
  1200  0009D2  D003               	goto	i1l1005
  1201                           
  1202                           ;UART_Driver.c: 78: readBuffer.counter = 2;
  1203  0009D4  0E02               	movlw	2
  1204  0009D6  6E33               	movwf	_readBuffer+6,c
  1205                           
  1206                           ;UART_Driver.c: 79: } else {
  1207  0009D8  0012               	return	
  1208  0009DA                     i1l1005:
  1209                           
  1210                           ;UART_Driver.c: 80: readBuffer.command = &data;
  1211  0009DA  0E0F               	movlw	low fillDataBuffer@data
  1212  0009DC  6E2E               	movwf	_readBuffer+1,c
  1213  0009DE  0E00               	movlw	high fillDataBuffer@data
  1214  0009E0  6E2F               	movwf	_readBuffer+2,c
  1215                           
  1216                           ;UART_Driver.c: 81: readBuffer.command++;
  1217  0009E2  4A2E               	infsnz	_readBuffer+1,f,c
  1218  0009E4  2A2F               	incf	_readBuffer+2,f,c
  1219                           
  1220                           ;UART_Driver.c: 82: }
  1221                           ;UART_Driver.c: 83: break;
  1222  0009E6  0012               	return	
  1223  0009E8                     i1l1009:
  1224                           
  1225                           ;UART_Driver.c: 85: if (data == 0x3A) {
  1226  0009E8  0E3A               	movlw	58
  1227  0009EA  180F               	xorwf	fillDataBuffer@data,w,c
  1228  0009EC  A4D8               	btfss	status,2,c
  1229  0009EE  D003               	goto	i1l1013
  1230                           
  1231                           ;UART_Driver.c: 86: readBuffer.counter = 3;
  1232  0009F0  0E03               	movlw	3
  1233  0009F2  6E33               	movwf	_readBuffer+6,c
  1234                           
  1235                           ;UART_Driver.c: 87: } else {
  1236  0009F4  0012               	return	
  1237  0009F6                     i1l1013:
  1238                           
  1239                           ;UART_Driver.c: 88: readBuffer.message = &data;
  1240  0009F6  0E0F               	movlw	low fillDataBuffer@data
  1241  0009F8  6E30               	movwf	_readBuffer+3,c
  1242  0009FA  0E00               	movlw	high fillDataBuffer@data
  1243  0009FC  6E31               	movwf	_readBuffer+4,c
  1244                           
  1245                           ;UART_Driver.c: 89: readBuffer.message++;
  1246  0009FE  4A30               	infsnz	_readBuffer+3,f,c
  1247  000A00  2A31               	incf	_readBuffer+4,f,c
  1248                           
  1249                           ;UART_Driver.c: 90: }
  1250                           ;UART_Driver.c: 91: break;
  1251  000A02  0012               	return	
  1252  000A04                     i1l1017:
  1253                           
  1254                           ;UART_Driver.c: 93: if(data == 0x24) {
  1255  000A04  0E24               	movlw	36
  1256  000A06  180F               	xorwf	fillDataBuffer@data,w,c
  1257  000A08  A4D8               	btfss	status,2,c
  1258  000A0A  D00C               	goto	i1l1023
  1259                           
  1260                           ;UART_Driver.c: 94: readReady = 1;
  1261  000A0C  0E01               	movlw	1
  1262  000A0E  6E35               	movwf	_readReady,c
  1263                           
  1264                           ;UART_Driver.c: 95: D_UART_Write(readBuffer.command, readBuffer.message);
  1265  000A10  C02E  F00A         	movff	_readBuffer+1,D_UART_Write@command
  1266  000A14  C02F  F00B         	movff	_readBuffer+2,D_UART_Write@command+1
  1267  000A18  C030  F00C         	movff	_readBuffer+3,D_UART_Write@data
  1268  000A1C  C031  F00D         	movff	_readBuffer+4,D_UART_Write@data+1
  1269  000A20  EC7B  F004         	call	_D_UART_Write	;wreg free
  1270  000A24                     i1l1023:
  1271                           
  1272                           ;UART_Driver.c: 96: }
  1273                           ;UART_Driver.c: 97: readBuffer.counter = 0;
  1274  000A24  0E00               	movlw	0
  1275  000A26  6E33               	movwf	_readBuffer+6,c
  1276                           
  1277                           ;UART_Driver.c: 98: break;
  1278  000A28  0012               	return	
  1279  000A2A                     i1l1025:
  1280                           
  1281                           ;UART_Driver.c: 100: readBuffer.counter = 0;
  1282  000A2A  0E00               	movlw	0
  1283  000A2C  6E33               	movwf	_readBuffer+6,c
  1284                           
  1285                           ;UART_Driver.c: 102: }
  1286                           
  1287                           ;UART_Driver.c: 101: break;
  1288  000A2E  0012               	return	
  1289  000A30                     i1l1029:
  1290  000A30  5033               	movf	_readBuffer+6,w,c
  1291                           
  1292                           ; Switch size 1, requested type "space"
  1293                           ; Number of cases is 4, Range of values is 0 to 3
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte           13     7 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298  000A32  0A00               	xorlw	0	; case 0
  1299  000A34  B4D8               	btfsc	status,2,c
  1300  000A36  D7BE               	goto	i1l993
  1301  000A38  0A01               	xorlw	1	; case 1
  1302  000A3A  B4D8               	btfsc	status,2,c
  1303  000A3C  D7C7               	goto	i1l1001
  1304  000A3E  0A03               	xorlw	3	; case 2
  1305  000A40  B4D8               	btfsc	status,2,c
  1306  000A42  D7D2               	goto	i1l1009
  1307  000A44  0A01               	xorlw	1	; case 3
  1308  000A46  B4D8               	btfsc	status,2,c
  1309  000A48  D7DD               	goto	i1l1017
  1310  000A4A  D7EF               	goto	i1l1025
  1311  000A4C                     __end_of_fillDataBuffer:
  1312                           	opt stack 0
  1313                           pclatu	equ	0xFFB
  1314                           pclath	equ	0xFFA
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           fsr0h	equ	0xFEA
  1324                           fsr0l	equ	0xFE9
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1h	equ	0xFE2
  1328                           fsr1l	equ	0xFE1
  1329                           bsr	equ	0xFE0
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _D_UART_Write *****************
  1335 ;; Defined at:
  1336 ;;		line 148 in file "Drivers/UART_Driver.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  command         2    9[COMRAM] PTR const unsigned char 
  1339 ;;		 -> fillDataBuffer@data(1), 
  1340 ;;  data            2   11[COMRAM] PTR const unsigned char 
  1341 ;;		 -> fillDataBuffer@data(1), 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1353 ;;      Params:         4       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:        5 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    3
  1360 ;; This function calls:
  1361 ;;		_printf
  1362 ;; This function is called by:
  1363 ;;		_fillDataBuffer
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text8
  1368  0008F6                     __ptext8:
  1369                           	opt stack 0
  1370  0008F6                     _D_UART_Write:
  1371                           	opt stack 23
  1372                           
  1373                           ;UART_Driver.c: 149: printf(startCharacter);
  1374                           
  1375                           ;incstack = 0
  1376  0008F6  C038  F003         	movff	_startCharacter,printf@f
  1377  0008FA  C039  F004         	movff	_startCharacter+1,printf@f+1
  1378  0008FE  5003               	movf	printf@f,w,c
  1379  000900  1004               	iorwf	printf@f+1,w,c
  1380  000902  A4D8               	btfss	status,2,c
  1381  000904  0E00               	movlw	low (__mediumconst shr (0+16))
  1382  000906  6E05               	movwf	printf@f+2,c
  1383  000908  EC73  F005         	call	_printf	;wreg free
  1384                           
  1385                           ;UART_Driver.c: 151: printf(messageCharacter);
  1386  00090C  C036  F003         	movff	_messageCharacter,printf@f
  1387  000910  C037  F004         	movff	_messageCharacter+1,printf@f+1
  1388  000914  5003               	movf	printf@f,w,c
  1389  000916  1004               	iorwf	printf@f+1,w,c
  1390  000918  A4D8               	btfss	status,2,c
  1391  00091A  0E00               	movlw	low (__mediumconst shr (0+16))
  1392  00091C  6E05               	movwf	printf@f+2,c
  1393  00091E  EC73  F005         	call	_printf	;wreg free
  1394                           
  1395                           ;UART_Driver.c: 152: printf(deviceName);
  1396  000922  C03C  F003         	movff	_deviceName,printf@f
  1397  000926  C03D  F004         	movff	_deviceName+1,printf@f+1
  1398  00092A  C03E  F005         	movff	_deviceName+2,printf@f+2
  1399  00092E  EC73  F005         	call	_printf	;wreg free
  1400                           
  1401                           ;UART_Driver.c: 154: printf(":");printf(command);
  1402  000932  0E0F               	movlw	low STR_4
  1403  000934  6E03               	movwf	printf@f,c
  1404  000936  0E08               	movlw	high STR_4
  1405  000938  6E04               	movwf	printf@f+1,c
  1406  00093A  5003               	movf	printf@f,w,c
  1407  00093C  1004               	iorwf	printf@f+1,w,c
  1408  00093E  A4D8               	btfss	status,2,c
  1409  000940  0E00               	movlw	low (__mediumconst shr (0+16))
  1410  000942  6E05               	movwf	printf@f+2,c
  1411  000944  EC73  F005         	call	_printf	;wreg free
  1412  000948  C00A  F003         	movff	D_UART_Write@command,printf@f
  1413  00094C  C00B  F004         	movff	D_UART_Write@command+1,printf@f+1
  1414  000950  5003               	movf	printf@f,w,c
  1415  000952  1004               	iorwf	printf@f+1,w,c
  1416  000954  A4D8               	btfss	status,2,c
  1417  000956  0E20               	movlw	32
  1418  000958  6E05               	movwf	printf@f+2,c
  1419  00095A  EC73  F005         	call	_printf	;wreg free
  1420                           
  1421                           ;UART_Driver.c: 156: printf(":");printf(data);
  1422  00095E  0E0F               	movlw	low STR_4
  1423  000960  6E03               	movwf	printf@f,c
  1424  000962  0E08               	movlw	high STR_4
  1425  000964  6E04               	movwf	printf@f+1,c
  1426  000966  5003               	movf	printf@f,w,c
  1427  000968  1004               	iorwf	printf@f+1,w,c
  1428  00096A  A4D8               	btfss	status,2,c
  1429  00096C  0E00               	movlw	low (__mediumconst shr (0+16))
  1430  00096E  6E05               	movwf	printf@f+2,c
  1431  000970  EC73  F005         	call	_printf	;wreg free
  1432  000974  C00C  F003         	movff	D_UART_Write@data,printf@f
  1433  000978  C00D  F004         	movff	D_UART_Write@data+1,printf@f+1
  1434  00097C  5003               	movf	printf@f,w,c
  1435  00097E  1004               	iorwf	printf@f+1,w,c
  1436  000980  A4D8               	btfss	status,2,c
  1437  000982  0E20               	movlw	32
  1438  000984  6E05               	movwf	printf@f+2,c
  1439  000986  EC73  F005         	call	_printf	;wreg free
  1440                           
  1441                           ;UART_Driver.c: 158: printf(stopCharacter);
  1442  00098A  C03A  F003         	movff	_stopCharacter,printf@f
  1443  00098E  C03B  F004         	movff	_stopCharacter+1,printf@f+1
  1444  000992  5003               	movf	printf@f,w,c
  1445  000994  1004               	iorwf	printf@f+1,w,c
  1446  000996  A4D8               	btfss	status,2,c
  1447  000998  0E00               	movlw	low (__mediumconst shr (0+16))
  1448  00099A  6E05               	movwf	printf@f+2,c
  1449  00099C  EC73  F005         	call	_printf	;wreg free
  1450                           
  1451                           ;UART_Driver.c: 159: _delay((unsigned long)((1)*(10000000/4000.0)));
  1452  0009A0  0E04               	movlw	4
  1453  0009A2  6E0E               	movwf	??_D_UART_Write& (0+255),c
  1454  0009A4  0E3E               	movlw	62
  1455  0009A6                     i1u43_27:
  1456  0009A6  2EE8               	decfsz	wreg,f,c
  1457  0009A8  D7FE               	goto	i1u43_27
  1458  0009AA  2E0E               	decfsz	??_D_UART_Write& (0+255),f,c
  1459  0009AC  D7FC               	goto	i1u43_27
  1460  0009AE  0012               	return		;funcret
  1461  0009B0                     __end_of_D_UART_Write:
  1462                           	opt stack 0
  1463                           pclatu	equ	0xFFB
  1464                           pclath	equ	0xFFA
  1465                           tblptru	equ	0xFF8
  1466                           tblptrh	equ	0xFF7
  1467                           tblptrl	equ	0xFF6
  1468                           tablat	equ	0xFF5
  1469                           prodh	equ	0xFF4
  1470                           prodl	equ	0xFF3
  1471                           intcon	equ	0xFF2
  1472                           postinc0	equ	0xFEE
  1473                           fsr0h	equ	0xFEA
  1474                           fsr0l	equ	0xFE9
  1475                           wreg	equ	0xFE8
  1476                           postdec1	equ	0xFE5
  1477                           fsr1h	equ	0xFE2
  1478                           fsr1l	equ	0xFE1
  1479                           bsr	equ	0xFE0
  1480                           fsr2h	equ	0xFDA
  1481                           fsr2l	equ	0xFD9
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _printf *****************
  1485 ;; Defined at:
  1486 ;;		line 464 in file "/opt/microchip/xc8/v1.37/sources/common/doprnt.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  f               3    2[COMRAM] PTR const unsigned char 
  1489 ;;		 -> STR_6(6), STR_5(2), STR_4(2), fillDataBuffer@data(1), 
  1490 ;;		 -> STR_3(4), ROM(32767), STR_2(2), STR_1(2), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  tmpval          4    0        struct .
  1493 ;;  cp              3    0        PTR const unsigned char 
  1494 ;;  ap              2    5[COMRAM] PTR void [1]
  1495 ;;		 -> ?_printf(2), 
  1496 ;;  len             2    0        unsigned int 
  1497 ;;  val             2    0        unsigned int 
  1498 ;;  c               1    8[COMRAM] char 
  1499 ;;  flag            1    7[COMRAM] unsigned char 
  1500 ;;  prec            1    0        char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    2[COMRAM] int 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         3       0       0       0       0       0       0       0       0
  1511 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1513 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1514 ;;Total ram usage:        7 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    2
  1517 ;; This function calls:
  1518 ;;		_putch
  1519 ;; This function is called by:
  1520 ;;		_D_UART_Write
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text9
  1525  000AE6                     __ptext9:
  1526                           	opt stack 0
  1527  000AE6                     _printf:
  1528                           	opt stack 23
  1529                           
  1530                           ;doprnt.c: 466: va_list ap;
  1531                           ;doprnt.c: 499: signed char c;
  1532                           ;doprnt.c: 506: signed char prec;
  1533                           ;doprnt.c: 508: unsigned char flag;
  1534                           ;doprnt.c: 523: union {
  1535                           ;doprnt.c: 524: unsigned long vd;
  1536                           ;doprnt.c: 525: double integ;
  1537                           ;doprnt.c: 526: } tmpval;
  1538                           ;doprnt.c: 528: unsigned int val;
  1539                           ;doprnt.c: 529: unsigned len;
  1540                           ;doprnt.c: 530: const char * cp;
  1541                           ;doprnt.c: 533: *ap = __va_start();
  1542                           
  1543                           ;incstack = 0
  1544  000AE6  0E06               	movlw	low (?_printf+3)
  1545  000AE8  6E06               	movwf	printf@ap,c
  1546  000AEA  0E00               	movlw	high (?_printf+3)
  1547  000AEC  6E07               	movwf	printf@ap+1,c
  1548                           
  1549                           ;doprnt.c: 536: while(c = *f++) {
  1550  000AEE  D02A               	goto	i1l937
  1551  000AF0                     i1l925:
  1552                           
  1553                           ;doprnt.c: 538: if(c != '%')
  1554  000AF0  0E25               	movlw	37
  1555  000AF2  1809               	xorwf	printf@c,w,c
  1556  000AF4  B4D8               	btfsc	status,2,c
  1557  000AF6  D004               	goto	i1l929
  1558                           
  1559                           ;doprnt.c: 540: {
  1560                           ;doprnt.c: 541: (putch(c) );
  1561  000AF8  5009               	movf	printf@c,w,c
  1562  000AFA  EC12  F006         	call	_putch
  1563                           
  1564                           ;doprnt.c: 542: continue;
  1565  000AFE  D022               	goto	i1l937
  1566  000B00                     i1l929:
  1567                           
  1568                           ;doprnt.c: 543: }
  1569                           ;doprnt.c: 548: flag = 0;
  1570  000B00  0E00               	movlw	0
  1571  000B02  6E08               	movwf	printf@flag,c
  1572                           
  1573                           ;doprnt.c: 635: switch(c = *f++) {
  1574  000B04  D004               	goto	i1l935
  1575  000B06                     i1l931:
  1576                           
  1577                           ;doprnt.c: 809: (putch(c) );
  1578  000B06  5009               	movf	printf@c,w,c
  1579  000B08  EC12  F006         	call	_putch
  1580                           
  1581                           ;doprnt.c: 822: }
  1582                           
  1583                           ;doprnt.c: 810: continue;
  1584  000B0C  D01B               	goto	i1l937
  1585  000B0E                     i1l935:
  1586  000B0E  C003  FFF6         	movff	printf@f,tblptrl
  1587  000B12  C004  FFF7         	movff	printf@f+1,tblptrh
  1588  000B16  C005  FFF8         	movff	printf@f+2,tblptru
  1589  000B1A  0E01               	movlw	1
  1590  000B1C  2603               	addwf	printf@f,f,c
  1591  000B1E  0E00               	movlw	0
  1592  000B20  2204               	addwfc	printf@f+1,f,c
  1593  000B22  2205               	addwfc	printf@f+2,f,c
  1594  000B24  BAF8               	btfsc	tblptru,5,c
  1595  000B26  D003               	bra	i1u20_27
  1596  000B28  0008               	tblrd		*
  1597  000B2A  50F5               	movf	tablat,w,c
  1598  000B2C  D005               	bra	i1u20_20
  1599  000B2E                     i1u20_27:
  1600  000B2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1601  000B32  CFF7 FFEA          	movff	tblptrh,fsr0h
  1602  000B36  50EF               	movf	indf0,w,c
  1603  000B38                     i1u20_20:
  1604  000B38  6E09               	movwf	printf@c,c
  1605  000B3A  5009               	movf	printf@c,w,c
  1606                           
  1607                           ; Switch size 1, requested type "space"
  1608                           ; Number of cases is 1, Range of values is 0 to 0
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte            4     3 (average)
  1612                           ;	Chosen strategy is simple_byte
  1613  000B3C  0A00               	xorlw	0	; case 0
  1614  000B3E  B4D8               	btfsc	status,2,c
  1615  000B40  0012               	return	
  1616  000B42  D7E1               	goto	i1l931
  1617  000B44                     i1l937:
  1618  000B44  C003  FFF6         	movff	printf@f,tblptrl
  1619  000B48  C004  FFF7         	movff	printf@f+1,tblptrh
  1620  000B4C  C005  FFF8         	movff	printf@f+2,tblptru
  1621  000B50  0E01               	movlw	1
  1622  000B52  2603               	addwf	printf@f,f,c
  1623  000B54  0E00               	movlw	0
  1624  000B56  2204               	addwfc	printf@f+1,f,c
  1625  000B58  2205               	addwfc	printf@f+2,f,c
  1626  000B5A  BAF8               	btfsc	tblptru,5,c
  1627  000B5C  D003               	bra	i1u21_27
  1628  000B5E  0008               	tblrd		*
  1629  000B60  50F5               	movf	tablat,w,c
  1630  000B62  D005               	bra	i1u21_20
  1631  000B64                     i1u21_27:
  1632  000B64  CFF6 FFE9          	movff	tblptrl,fsr0l
  1633  000B68  CFF7 FFEA          	movff	tblptrh,fsr0h
  1634  000B6C  50EF               	movf	indf0,w,c
  1635  000B6E                     i1u21_20:
  1636  000B6E  6E09               	movwf	printf@c,c
  1637  000B70  5009               	movf	printf@c,w,c
  1638  000B72  B4D8               	btfsc	status,2,c
  1639  000B74  0012               	return	
  1640  000B76  D7BC               	goto	i1l925
  1641  000B78                     __end_of_printf:
  1642                           	opt stack 0
  1643                           pclatu	equ	0xFFB
  1644                           pclath	equ	0xFFA
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           prodh	equ	0xFF4
  1650                           prodl	equ	0xFF3
  1651                           intcon	equ	0xFF2
  1652                           indf0	equ	0xFEF
  1653                           postinc0	equ	0xFEE
  1654                           fsr0h	equ	0xFEA
  1655                           fsr0l	equ	0xFE9
  1656                           wreg	equ	0xFE8
  1657                           postdec1	equ	0xFE5
  1658                           fsr1h	equ	0xFE2
  1659                           fsr1l	equ	0xFE1
  1660                           bsr	equ	0xFE0
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8
  1664                           
  1665 ;; *************** function _putch *****************
  1666 ;; Defined at:
  1667 ;;		line 182 in file "Drivers/UART_Driver.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  data            1    wreg     unsigned char 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  data            1    1[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0
  1682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1684 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1685 ;;Total ram usage:        1 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    1
  1688 ;; This function calls:
  1689 ;;		_writeByte
  1690 ;; This function is called by:
  1691 ;;		_printf
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text10
  1696  000C24                     __ptext10:
  1697                           	opt stack 0
  1698  000C24                     _putch:
  1699                           	opt stack 23
  1700                           
  1701                           ;incstack = 0
  1702                           ;putch@data stored from wreg
  1703  000C24  6E02               	movwf	putch@data,c
  1704                           
  1705                           ;UART_Driver.c: 183: writeByte(data);
  1706  000C26  5002               	movf	putch@data,w,c
  1707  000C28  EC0C  F006         	call	_writeByte
  1708  000C2C  0012               	return		;funcret
  1709  000C2E                     __end_of_putch:
  1710                           	opt stack 0
  1711                           pclatu	equ	0xFFB
  1712                           pclath	equ	0xFFA
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodh	equ	0xFF4
  1718                           prodl	equ	0xFF3
  1719                           intcon	equ	0xFF2
  1720                           indf0	equ	0xFEF
  1721                           postinc0	equ	0xFEE
  1722                           fsr0h	equ	0xFEA
  1723                           fsr0l	equ	0xFE9
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1h	equ	0xFE2
  1727                           fsr1l	equ	0xFE1
  1728                           bsr	equ	0xFE0
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _writeByte *****************
  1734 ;; Defined at:
  1735 ;;		line 50 in file "Drivers/UART_Driver.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  data            1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  data            1    0[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1752 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1753 ;;Total ram usage:        1 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_putch
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text11
  1763  000C18                     __ptext11:
  1764                           	opt stack 0
  1765  000C18                     _writeByte:
  1766                           	opt stack 23
  1767                           
  1768                           ;incstack = 0
  1769                           ;writeByte@data stored from wreg
  1770  000C18  6E01               	movwf	writeByte@data,c
  1771  000C1A                     i1l51:
  1772  000C1A  A2AC               	btfss	4012,1,c	;volatile
  1773  000C1C  D7FE               	goto	i1l51
  1774                           
  1775                           ;UART_Driver.c: 52: TXREG = data;
  1776  000C1E  C001  FFAD         	movff	writeByte@data,4013	;volatile
  1777  000C22  0012               	return		;funcret
  1778  000C24                     __end_of_writeByte:
  1779                           	opt stack 0
  1780                           pclatu	equ	0xFFB
  1781                           pclath	equ	0xFFA
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           intcon	equ	0xFF2
  1789                           indf0	equ	0xFEF
  1790                           postinc0	equ	0xFEE
  1791                           fsr0h	equ	0xFEA
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           bsr	equ	0xFE0
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           pclatu	equ	0xFFB
  1802                           pclath	equ	0xFFA
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           indf0	equ	0xFEF
  1811                           postinc0	equ	0xFEE
  1812                           fsr0h	equ	0xFEA
  1813                           fsr0l	equ	0xFE9
  1814                           wreg	equ	0xFE8
  1815                           postdec1	equ	0xFE5
  1816                           fsr1h	equ	0xFE2
  1817                           fsr1l	equ	0xFE1
  1818                           bsr	equ	0xFE0
  1819                           fsr2h	equ	0xFDA
  1820                           fsr2l	equ	0xFD9
  1821                           status	equ	0xFD8
  1822                           
  1823                           	psect	rparam
  1824  0000                     pclatu	equ	0xFFB
  1825                           pclath	equ	0xFFA
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           indf0	equ	0xFEF
  1834                           postinc0	equ	0xFEE
  1835                           fsr0h	equ	0xFEA
  1836                           fsr0l	equ	0xFE9
  1837                           wreg	equ	0xFE8
  1838                           postdec1	equ	0xFE5
  1839                           fsr1h	equ	0xFE2
  1840                           fsr1l	equ	0xFE1
  1841                           bsr	equ	0xFE0
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846                           	psect	temp
  1847  00003F                     btemp:
  1848                           	opt stack 0
  1849  00003F                     	ds	1
  1850  0000                     int$flags	set	btemp
  1851                           pclatu	equ	0xFFB
  1852                           pclath	equ	0xFFA
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           intcon	equ	0xFF2
  1860                           indf0	equ	0xFEF
  1861                           postinc0	equ	0xFEE
  1862                           fsr0h	equ	0xFEA
  1863                           fsr0l	equ	0xFE9
  1864                           wreg	equ	0xFE8
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           bsr	equ	0xFE0
  1869                           fsr2h	equ	0xFDA
  1870                           fsr2l	equ	0xFD9
  1871                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        6
    BSS         9
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      62
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(3) Largest target is 32767
		 -> STR_6(CODE[6]), STR_5(CODE[2]), STR_4(CODE[2]), fillDataBuffer@data(COMRAM[1]), 
		 -> STR_3(CODE[4]), ROM(CODE[32767]), STR_2(CODE[2]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    D_UART_Write@data	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    D_UART_Write@command	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    D_UART_Init@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    deviceName	PTR const unsigned char  size(3) Largest target is 32767
		 -> STR_6(CODE[6]), ROM(CODE[32767]), 

    S21$message	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    readBuffer.message	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    S21$command	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    readBuffer.command	PTR const unsigned char  size(2) Largest target is 1
		 -> fillDataBuffer@data(COMRAM[1]), 

    messageCharacter	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    stopCharacter	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), 

    startCharacter	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_D_UART_Init
    _D_UART_Init->___aldiv

Critical Paths under _LowISR in COMRAM

    _LowISR->_fillDataBuffer
    _fillDataBuffer->_D_UART_Write
    _D_UART_Write->_printf
    _printf->_putch
    _putch->_writeByte

Critical Paths under _main in BANK0

    _main->_D_UART_Init
    _D_UART_Init->___aldiv

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1155
                        _D_PORT_Init
                      _D_UART_Enable
                        _D_UART_Init
 ---------------------------------------------------------------------------------
 (1) _D_UART_Init                                          9     4      5    1133
                                             40 COMRAM     4     4      0
                                              6 BANK0      5     0      5
                      _D_UART_Enable
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     753
                                             32 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _D_UART_Enable                                        1     1      0      22
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _D_PORT_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowISR                                              17    17      0     962
                                             15 COMRAM    17    17      0
                     _fillDataBuffer
                           _readByte
 ---------------------------------------------------------------------------------
 (4) _readByte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _fillDataBuffer                                       1     1      0     962
                                             14 COMRAM     1     1      0
                       _D_UART_Write
 ---------------------------------------------------------------------------------
 (5) _D_UART_Write                                         5     1      4     828
                                              9 COMRAM     5     1      4
                             _printf
 ---------------------------------------------------------------------------------
 (6) _printf                                              19    16      3     656
                                              2 COMRAM     7     4      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                          _writeByte
 ---------------------------------------------------------------------------------
 (8) _writeByte                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _D_PORT_Init
   _D_UART_Enable
   _D_UART_Init
     _D_UART_Enable
     ___aldiv

 _LowISR (ROOT)
   _fillDataBuffer
     _D_UART_Write
       _printf
         _putch
           _writeByte
   _readByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      3E       1       66.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      11        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Oct 29 12:31:44 2016

                     l89 0BEE              __CFG_BOR$ON 000000                       bsr 000FE0  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l124 0BD8  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1113 08E4                     l1105 08B8                     l1109 08C8  
                   l1081 0832                     l1093 0872                     l1095 0880  
                   l1087 084C                     l1097 0884                     STR_1 080D  
                   STR_2 080B                     STR_3 0807                     STR_4 080F  
                   STR_5 080F                     STR_6 0801                     i1l51 0C1A  
                   _baud 0034                     _main 0BAE                     fsr0h 000FEA  
                   fsr1h 000FE2                     indf0 000FEF                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 003F                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00B8            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010           _startCharacter 0038  
          __CFG_PLLDIV$5 000000          __end_of___aldiv 08F6                    ?_main 0001  
                  i1l931 0B06                    i1l925 0AF0                    i1l935 0B0E  
                  i1l929 0B00                    i1l937 0B44                    i1l993 09B4  
                  i1l997 09C6                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _putch 0C24                    tablat 000FF5  
           ?_D_UART_Init 0066                    status 000FD8             ?_D_PORT_Init 0001  
          _stopCharacter 003A          __initialization 0B78         _D_UART_Init$1244 0029  
           __end_of_main 0BDA                   ??_main 002D            __activetblptr 000003  
        __CFG_CCP2MX$OFF 000000                   _ADCON1 000FC1                   ?_putch 0001  
                 i1l1001 09CC                   i1l1013 09F6                   i1l1005 09DA  
                 i1l1023 0A24                   i1l1025 0A2A                   i1l1017 0A04  
                 i1l1009 09E8                   i1l1029 0A30                   i1l1065 006E  
                 _LowISR 0018           __CFG_XINST$OFF 000000                ??___aldiv 0029  
       __end_of_readByte 0C36                   clear_0 0B7E                   _printf 0AE6  
           __pdataCOMRAM 0036    D_UART_Init@interrupts 006A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
          ?_D_UART_Write 000A          D_UART_Init@baud 0068          D_UART_Init@name 0066  
             __accesstop 0060  __end_of__initialization 0BA4          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_putch 0C2E  
       _messageCharacter 0036   __size_of_D_UART_Enable 0020           ??_D_UART_Write 000E  
                ??_putch 0002               __pnvCOMRAM 003C     __size_of_D_UART_Init 009A  
                ?_LowISR 0001     __size_of_D_PORT_Init 001E               _deviceName 003C  
                ?_printf 0003                  i1u20_20 0B38                  i1u20_27 0B2E  
                i1u21_20 0B6E                  i1u21_27 0B64  __size_of_fillDataBuffer 009C  
                i1u43_27 09A6      D_UART_Enable@enable 0021          __CFG_VREGEN$OFF 000000  
              ?_readByte 0001       __size_of_writeByte 000C            _D_UART_Enable 0BDA  
                __Hparam 0000                  __Lparam 0000          __size_of_LowISR 00A0  
             _readBuffer 002D                  ___aldiv 0812             __psmallconst 0800  
        __CFG_STVREN$OFF 000000                  __pcinit 0B78                  __ramtop 0800  
                __ptext0 0BAE                  __ptext1 0A4C                  __ptext2 0812  
                __ptext3 0BDA                  __ptext4 0BFA                  __ptext6 0C2E  
                __ptext7 09B0                  __ptext8 08F6                  __ptext9 0AE6  
        __size_of_printf 0092         ___aldiv@dividend 0021     end_of_initialization 0BA4  
             ??_readByte 0001           ?_D_UART_Enable 0001     __end_of_D_UART_Write 09B0  
              _RCSTAbits 000FAB                  printf@c 0009                  printf@f 0003  
       ___aldiv@quotient 0062                  postdec1 000FE5                  postinc0 000FEE  
              _PORTAbits 000F80        __end_of_writeByte 0C24                _TRISCbits 000F94  
              _TXSTAbits 000FAC           __end_of_LowISR 00B8              _BAUDCONbits 000FB8  
          __pidataCOMRAM 0C36           __end_of_printf 0B78      start_initialization 0B78  
         _fillDataBuffer 09B0          ??_D_UART_Enable 0021                 ??_LowISR 0010  
       __CFG_LPT1OSC$OFF 000000         D_UART_Write@data 000C                 ??_printf 0006  
 __end_of_fillDataBuffer 0A4C              __pbssCOMRAM 002D            __pcstackBANK0 0060  
          ??_D_UART_Init 0029    __size_of_D_UART_Write 00BA            ??_D_PORT_Init 0021  
      __size_of_readByte 0008                 ?___aldiv 0021              __pintcodelo 0018  
     fillDataBuffer@data 000F          ?_fillDataBuffer 0001              __smallconst 0800  
           _D_UART_Write 08F6                _readReady 0035           __size_of_putch 000A  
        ___aldiv@divisor 0025          ___aldiv@counter 0060                 _IPR1bits 000F9F  
               _PIE1bits 000F9D      __end_of_D_UART_Init 0AE6                 _PIR1bits 000F9E  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000      __end_of_D_PORT_Init 0C18  
             printf@flag 0008                _writeByte 0C18                copy_data0 0B98  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 00E4  
               __ptext10 0C24                 __ptext11 0C18               ?_writeByte 0001  
            _D_UART_Init 0A4C                 _readByte 0C2E            __size_of_main 002C  
            _D_PORT_Init 0BFA                 int$flags 003F    __CFG_CPUDIV$OSC1_PLL2 000000  
              putch@data 0002               _INTCONbits 000FF2                 intlevel1 0000  
  __end_of_D_UART_Enable 0BFA                 printf@ap 0006         ??_fillDataBuffer 000F  
    D_UART_Write@command 000A            writeByte@data 0001             ___aldiv@sign 0061  
            ??_writeByte 0001  
